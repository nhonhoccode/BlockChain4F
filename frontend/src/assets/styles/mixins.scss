// Mixins cho responsive design
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'xs' {
    @media (max-width: 599px) {
      @content;
    }
  } @else if $breakpoint == 'sm' {
    @media (min-width: 600px) and (max-width: 959px) {
      @content;
    }
  } @else if $breakpoint == 'md' {
    @media (min-width: 960px) and (max-width: 1279px) {
      @content;
    }
  } @else if $breakpoint == 'lg' {
    @media (min-width: 1280px) and (max-width: 1919px) {
      @content;
    }
  } @else if $breakpoint == 'xl' {
    @media (min-width: 1920px) {
      @content;
    }
  }
}

// Mixins cho mobile first
@mixin respond-above($breakpoint) {
  @if $breakpoint == 'xs' {
    @media (min-width: 600px) {
      @content;
    }
  } @else if $breakpoint == 'sm' {
    @media (min-width: 960px) {
      @content;
    }
  } @else if $breakpoint == 'md' {
    @media (min-width: 1280px) {
      @content;
    }
  } @else if $breakpoint == 'lg' {
    @media (min-width: 1920px) {
      @content;
    }
  }
}

// Mixins cho laptop first
@mixin respond-below($breakpoint) {
  @if $breakpoint == 'xl' {
    @media (max-width: 1919px) {
      @content;
    }
  } @else if $breakpoint == 'lg' {
    @media (max-width: 1279px) {
      @content;
    }
  } @else if $breakpoint == 'md' {
    @media (max-width: 959px) {
      @content;
    }
  } @else if $breakpoint == 'sm' {
    @media (max-width: 599px) {
      @content;
    }
  }
}

// Mixin cho flexbox
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Mixin cho grid
@mixin grid($columns: repeat(12, 1fr), $rows: auto, $gap: 16px) {
  display: grid;
  grid-template-columns: $columns;
  grid-template-rows: $rows;
  gap: $gap;
}

// Mixin cho positioning
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-fill {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// Mixin cho text truncation
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Mixin cho multi-line text truncation
@mixin text-truncate-multiline($lines: 2) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines;
  line-clamp: $lines;
  max-height: calc(1.5em * #{$lines});
}

// Mixin cho shadows
@mixin shadow($level: 1) {
  @if $level == 1 {
    box-shadow: var(--shadow-1);
  } @else if $level == 2 {
    box-shadow: var(--shadow-2);
  } @else if $level == 3 {
    box-shadow: var(--shadow-3);
  } @else if $level == 4 {
    box-shadow: var(--shadow-4);
  } @else if $level == 5 {
    box-shadow: var(--shadow-5);
  }
}

// Mixin cho transitions
@mixin transition($properties: all, $duration: var(--transition-normal), $timing: ease-in-out) {
  transition-property: $properties;
  transition-duration: $duration;
  transition-timing-function: $timing;
}
