version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: blockchain_admin_db_dev
    environment:
      POSTGRES_DB: blockchain_admin_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dev123}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - blockchain_network_dev

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: blockchain_admin_redis_dev
    command: redis-server --appendonly yes
    volumes:
      - redis_data_dev:/data
    ports:
      - "6380:6379"
    networks:
      - blockchain_network_dev

  # Django Backend (Development)
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.dev
    container_name: blockchain_admin_backend_dev
    environment:
      - APP_ENV=development
      - DEBUG=true
      - SECRET_KEY=${SECRET_KEY:-dev_secret_key}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=blockchain_admin_dev
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-dev123}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
    volumes:
      - ../backend:/app
      - media_files_dev:/app/media
    ports:
      - "8001:8000"
    depends_on:
      - db
      - redis
    networks:
      - blockchain_network_dev
    command: python manage.py runserver 0.0.0.0:8000

  # React Frontend (Development)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    container_name: blockchain_admin_frontend_dev
    environment:
      - REACT_APP_API_URL=http://localhost:8001/api
      - REACT_APP_ENVIRONMENT=development
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ../frontend:/app
      - /app/node_modules
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - blockchain_network_dev
    command: npm start

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  media_files_dev:
    driver: local

networks:
  blockchain_network_dev:
    driver: bridge 